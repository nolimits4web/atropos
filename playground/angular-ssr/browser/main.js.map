{"version":3,"file":"main.js","mappings":"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L;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,oBAAoB,YAAY,mBAAmB;;AAEnG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA,gDAAgD,oCAAoC,KAAK,mCAAmC;AAC5H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe,KAAK,cAAc;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS,KAAK,UAAU,KAAK,UAAU,cAAc,QAAQ,eAAe,QAAQ;;AAE/H;AACA;AACA;;AAEA;AACA,mCAAmC,gBAAgB;AACnD;AACA,gDAAgD,0BAA0B,KAAK,yBAAyB;AACxG;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA,+CAA+C,oBAAoB;AACnE,6BAA6B,gBAAgB;AAC7C;;AAEA;AACA,gCAAgC,gBAAgB;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,gBAAgB;AAC7C;AACA,+CAA+C,EAAE;;AAEjD;AACA,gCAAgC,gBAAgB;AAChD;AACA;;AAEA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;;AAEA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,mBAAmB;AACpE,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;;AAEuC","sources":["./playground/angular/src/app/app.component.ts","./playground/angular/src/app/app.component.html","./playground/angular/src/app/app.module.ts","./playground/angular/src/environments/environment.ts","./playground/angular/src/main.ts","./src/angular/src/lib/atropos.component.ts","./src/angular/src/lib/atropos.module.ts","./src/angular/src/public-api.ts","./package/esm/atropos.esm.js"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {}\r\n","<div className=\"container\">\n  <atropos className=\"atropos-banner\" [highlight]=\"false\" (onEnter)=\"($event)\">\n    <img className=\"atropos-banner-spacer\" src=\"atropos-bg.svg\" alt=\"\" />\n    <img data-atropos-offset=\"-4.5\" src=\"atropos-bg.svg\" alt=\"\" />\n    <img data-atropos-offset=\"-2.5\" src=\"atropos-mountains.svg\" alt=\"\" />\n    <img data-atropos-offset=\"0\" src=\"atropos-forest-back.svg\" alt=\"\" />\n    <img data-atropos-offset=\"2\" src=\"atropos-forest-mid.svg\" alt=\"\" />\n    <img data-atropos-offset=\"4\" src=\"atropos-forest-front.svg\" alt=\"\" />\n    <img data-atropos-offset=\"5\" src=\"atropos-logo-en.svg\" alt=\"\" />\n  </atropos>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AtroposModule } from 'src/angular/src/public-api';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AtroposModule,\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch((err) => console.error(err));\r\n});\r\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport AtroposCore, { AtroposInstance } from 'atropos';\n\n@Component({\n  selector: 'atropos',\n  template: ` <div [ngClass]=\"'atropos ' + class\">\n    <span [ngClass]=\"'atropos-scale ' + scaleClassName\">\n      <span [ngClass]=\"'atropos-rotate ' + rotateClassName\">\n        <span [ngClass]=\"'atropos-inner ' + innerClassName\">\n          <ng-content></ng-content>\n          <span *ngIf=\"highlight\" class=\"atropos-highlight\"></span>\n        </span>\n        <span *ngIf=\"shadow\" class=\"atropos-shadow\"></span>\n      </span>\n    </span>\n  </div>`,\n  styles: [],\n})\nexport class AtroposComponent implements OnInit {\n  @Input() shadow: boolean | undefined;\n  @Input() highlight: boolean | undefined;\n  @Input() class: string = '';\n  @Input() scaleClassName: string = '';\n  @Input() rotateClassName: string = '';\n  @Input() innerClassName: string = '';\n  ref: AtroposInstance | undefined;\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.initAtropos();\n  }\n\n  initAtropos() {\n    this.ref = AtroposCore({ el: this.elementRef.nativeElement });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AtroposComponent } from './atropos.component';\n\n@NgModule({\n  declarations: [AtroposComponent],\n  imports: [CommonModule],\n  exports: [AtroposComponent],\n})\nexport class AtroposModule {}\n","/*\n * Public API Surface of atropos\n */\n\nexport * from './lib/atropos.component';\nexport * from './lib/atropos.module';\n","/**\n * Atropos 1.0.1\n * Touch-friendly 3D parallax hover effects\n * https://atroposjs.com\n *\n * Copyright 2021-2021 \n *\n * Released under the MIT License\n *\n * Released on: November 25, 2021\n */\n\n/* eslint-disable no-restricted-globals */\nconst $ = (el, sel) => el.querySelector(sel);\n\nconst $$ = (el, sel) => el.querySelectorAll(sel);\n\nconst removeUndefinedProps = function (obj) {\n  if (obj === void 0) {\n    obj = {};\n  }\n\n  const result = {};\n  Object.keys(obj).forEach(key => {\n    if (typeof obj[key] !== 'undefined') result[key] = obj[key];\n  });\n  return result;\n};\n\nfunction Atropos(originalParams) {\n  if (originalParams === void 0) {\n    originalParams = {};\n  }\n\n  let {\n    el,\n    eventsEl\n  } = originalParams;\n  const self = {\n    __atropos__: true,\n    params: {\n      alwaysActive: false,\n      activeOffset: 50,\n      shadowOffset: 50,\n      shadowScale: 1,\n      duration: 300,\n      rotate: true,\n      rotateTouch: true,\n      rotateXMax: 15,\n      rotateYMax: 15,\n      rotateXInvert: false,\n      rotateYInvert: false,\n      stretchX: 0,\n      stretchY: 0,\n      stretchZ: 0,\n      commonOrigin: true,\n      shadow: true,\n      highlight: true,\n      onEnter: null,\n      onLeave: null,\n      onRotate: null,\n      ...removeUndefinedProps(originalParams || {})\n    },\n    destroyed: false,\n    isActive: false\n  };\n  const {\n    params\n  } = self;\n  let rotateEl;\n  let scaleEl;\n  let innerEl;\n  let elBoundingClientRect;\n  let eventsElBoundingClientRect;\n  let shadowEl;\n  let highlightEl;\n  let isScrolling;\n  let clientXStart;\n  let clientYStart;\n  const queue = [];\n  let queueFrameId;\n\n  const purgeQueue = () => {\n    queueFrameId = requestAnimationFrame(() => {\n      queue.forEach(data => {\n        if (typeof data === 'function') {\n          data();\n        } else {\n          const {\n            element,\n            prop,\n            value\n          } = data;\n          element.style[prop] = value;\n        }\n      });\n      queue.splice(0, queue.length);\n      purgeQueue();\n    });\n  };\n\n  purgeQueue();\n\n  const $setDuration = (element, value) => {\n    queue.push({\n      element,\n      prop: 'transitionDuration',\n      value\n    });\n  };\n\n  const $setEasing = (element, value) => {\n    queue.push({\n      element,\n      prop: 'transitionTimingFunction',\n      value\n    });\n  };\n\n  const $setTransform = (element, value) => {\n    queue.push({\n      element,\n      prop: 'transform',\n      value\n    });\n  };\n\n  const $setOpacity = (element, value) => {\n    queue.push({\n      element,\n      prop: 'opacity',\n      value\n    });\n  };\n\n  const $setOrigin = (element, value) => {\n    queue.push({\n      element,\n      prop: 'transformOrigin',\n      value\n    });\n  };\n\n  const $on = (element, event, handler, props) => element.addEventListener(event, handler, props);\n\n  const $off = (element, event, handler, props) => element.removeEventListener(event, handler, props);\n\n  const createShadow = () => {\n    let created;\n    shadowEl = $(el, '.atropos-shadow');\n\n    if (!shadowEl) {\n      shadowEl = document.createElement('span');\n      shadowEl.classList.add('atropos-shadow');\n      created = true;\n    }\n\n    $setTransform(shadowEl, `translate3d(0,0,-${params.shadowOffset}px) scale(${params.shadowScale})`);\n\n    if (created) {\n      rotateEl.appendChild(shadowEl);\n    }\n  };\n\n  const createHighlight = () => {\n    let created;\n    highlightEl = $(el, '.atropos-highlight');\n\n    if (!highlightEl) {\n      highlightEl = document.createElement('span');\n      highlightEl.classList.add('atropos-highlight');\n      created = true;\n    }\n\n    $setTransform(highlightEl, `translate3d(0,0,0)`);\n\n    if (created) {\n      innerEl.appendChild(highlightEl);\n    }\n  };\n\n  const setChildrenOffset = _ref => {\n    let {\n      rotateXPercentage = 0,\n      rotateYPercentage = 0,\n      duration,\n      opacityOnly,\n      easeOut\n    } = _ref;\n\n    const getOpacity = element => {\n      if (element.dataset.atroposOpacity && typeof element.dataset.atroposOpacity === 'string') {\n        return element.dataset.atroposOpacity.split(';').map(v => parseFloat(v));\n      }\n\n      return undefined;\n    };\n\n    $$(el, '[data-atropos-offset], [data-atropos-opacity]').forEach(childEl => {\n      $setDuration(childEl, duration);\n      $setEasing(childEl, easeOut ? 'ease-out' : '');\n      const elementOpacity = getOpacity(childEl);\n\n      if (rotateXPercentage === 0 && rotateYPercentage === 0) {\n        if (!opacityOnly) $setTransform(childEl, `translate3d(0, 0, 0)`);\n        if (elementOpacity) $setOpacity(childEl, elementOpacity[0]);\n      } else {\n        const childElOffset = parseFloat(childEl.dataset.atroposOffset) / 100;\n\n        if (!Number.isNaN(childElOffset) && !opacityOnly) {\n          $setTransform(childEl, `translate3d(${-rotateYPercentage * -childElOffset}%, ${rotateXPercentage * -childElOffset}%, 0)`);\n        }\n\n        if (elementOpacity) {\n          const [min, max] = elementOpacity;\n          const rotatePercentage = Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage));\n          $setOpacity(childEl, min + (max - min) * rotatePercentage / 100);\n        }\n      }\n    });\n  };\n\n  const setElements = (clientX, clientY) => {\n    const isMultiple = el !== eventsEl;\n\n    if (!elBoundingClientRect) {\n      elBoundingClientRect = el.getBoundingClientRect();\n    }\n\n    if (isMultiple && !eventsElBoundingClientRect) {\n      eventsElBoundingClientRect = eventsEl.getBoundingClientRect();\n    }\n\n    if (typeof clientX === 'undefined' && typeof clientY === 'undefined') {\n      const rect = isMultiple ? eventsElBoundingClientRect : elBoundingClientRect;\n      clientX = rect.left + rect.width / 2;\n      clientY = rect.top + rect.height / 2;\n    }\n\n    let rotateX = 0;\n    let rotateY = 0;\n    const {\n      top,\n      left,\n      width,\n      height\n    } = elBoundingClientRect;\n    let transformOrigin;\n\n    if (!isMultiple) {\n      const centerX = width / 2;\n      const centerY = height / 2;\n      const coordX = clientX - left;\n      const coordY = clientY - top;\n      rotateY = params.rotateYMax * (coordX - centerX) / (width / 2) * -1;\n      rotateX = params.rotateXMax * (coordY - centerY) / (height / 2);\n    } else {\n      const {\n        top: parentTop,\n        left: parentLeft,\n        width: parentWidth,\n        height: parentHeight\n      } = eventsElBoundingClientRect;\n      const offsetLeft = left - parentLeft;\n      const offsetTop = top - parentTop;\n      const centerX = width / 2 + offsetLeft;\n      const centerY = height / 2 + offsetTop;\n      const coordX = clientX - parentLeft;\n      const coordY = clientY - parentTop;\n      rotateY = params.rotateYMax * (coordX - centerX) / (parentWidth - width / 2) * -1;\n      rotateX = params.rotateXMax * (coordY - centerY) / (parentHeight - height / 2);\n      transformOrigin = `${clientX - left}px ${clientY - top}px`;\n    }\n\n    rotateX = Math.min(Math.max(-rotateX, -params.rotateXMax), params.rotateXMax);\n    if (params.rotateXInvert) rotateX = -rotateX;\n    rotateY = Math.min(Math.max(-rotateY, -params.rotateYMax), params.rotateYMax);\n    if (params.rotateYInvert) rotateY = -rotateY;\n    const rotateXPercentage = rotateX / params.rotateXMax * 100;\n    const rotateYPercentage = rotateY / params.rotateYMax * 100;\n    const stretchX = (isMultiple ? rotateYPercentage / 100 * params.stretchX : 0) * (params.rotateYInvert ? -1 : 1);\n    const stretchY = (isMultiple ? rotateXPercentage / 100 * params.stretchY : 0) * (params.rotateXInvert ? -1 : 1);\n    const stretchZ = isMultiple ? Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage)) / 100 * params.stretchZ : 0;\n    $setTransform(rotateEl, `translate3d(${stretchX}%, ${-stretchY}%, ${-stretchZ}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n\n    if (transformOrigin && params.commonOrigin) {\n      $setOrigin(rotateEl, transformOrigin);\n    }\n\n    if (highlightEl) {\n      $setDuration(highlightEl, `${params.duration}ms`);\n      $setEasing(highlightEl, 'ease-out');\n      $setTransform(highlightEl, `translate3d(${-rotateYPercentage * 0.25}%, ${rotateXPercentage * 0.25}%, 0)`);\n      $setOpacity(highlightEl, Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage)) / 100);\n    }\n\n    setChildrenOffset({\n      rotateXPercentage,\n      rotateYPercentage,\n      duration: `${params.duration}ms`,\n      easeOut: true\n    });\n    if (typeof params.onRotate === 'function') params.onRotate(rotateX, rotateY);\n  };\n\n  const activate = () => {\n    queue.push(() => el.classList.add('atropos-active'));\n    $setDuration(rotateEl, `${params.duration}ms`);\n    $setEasing(rotateEl, 'ease-out');\n    $setTransform(scaleEl, `translate3d(0,0, ${params.activeOffset}px)`);\n    $setDuration(scaleEl, `${params.duration}ms`);\n    $setEasing(scaleEl, 'ease-out');\n\n    if (shadowEl) {\n      $setDuration(shadowEl, `${params.duration}ms`);\n      $setEasing(shadowEl, 'ease-out');\n    }\n\n    self.isActive = true;\n  };\n\n  const onPointerEnter = e => {\n    isScrolling = undefined;\n    if (e.type === 'pointerdown' && e.pointerType === 'mouse') return;\n    if (e.type === 'pointerenter' && e.pointerType !== 'mouse') return;\n\n    if (e.type === 'pointerdown') {\n      e.preventDefault();\n    }\n\n    clientXStart = e.clientX;\n    clientYStart = e.clientY;\n\n    if (params.alwaysActive) {\n      elBoundingClientRect = undefined;\n      eventsElBoundingClientRect = undefined;\n      return;\n    }\n\n    activate();\n    if (typeof params.onEnter === 'function') params.onEnter();\n  };\n\n  const onTouchMove = e => {\n    if (isScrolling === false && e.cancelable) {\n      e.preventDefault();\n    }\n  };\n\n  const onPointerMove = e => {\n    if (!params.rotate || !self.isActive) return;\n\n    if (e.pointerType !== 'mouse') {\n      if (!params.rotateTouch) return;\n      e.preventDefault();\n    }\n\n    const {\n      clientX,\n      clientY\n    } = e;\n    const diffX = clientX - clientXStart;\n    const diffY = clientY - clientYStart;\n\n    if (typeof params.rotateTouch === 'string' && (diffX !== 0 || diffY !== 0) && typeof isScrolling === 'undefined') {\n      if (diffX * diffX + diffY * diffY >= 25) {\n        const touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        isScrolling = params.rotateTouch === 'scroll-y' ? touchAngle > 45 : 90 - touchAngle > 45;\n      }\n\n      if (isScrolling === false) {\n        el.classList.add('atropos-rotate-touch');\n\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    if (e.pointerType !== 'mouse' && isScrolling) {\n      return;\n    }\n\n    setElements(clientX, clientY);\n  };\n\n  const onPointerLeave = e => {\n    elBoundingClientRect = undefined;\n    eventsElBoundingClientRect = undefined;\n    if (!self.isActive) return;\n    if (e && e.type === 'pointerup' && e.pointerType === 'mouse') return;\n    if (e && e.type === 'pointerleave' && e.pointerType !== 'mouse') return;\n\n    if (typeof params.rotateTouch === 'string' && isScrolling) {\n      el.classList.remove('atropos-rotate-touch');\n    }\n\n    if (params.alwaysActive) {\n      setElements();\n      if (typeof params.onRotate === 'function') params.onRotate(0, 0);\n      if (typeof params.onLeave === 'function') params.onLeave();\n      return;\n    }\n\n    queue.push(() => el.classList.remove('atropos-active'));\n    $setDuration(scaleEl, `${params.duration}ms`);\n    $setEasing(scaleEl, '');\n    $setTransform(scaleEl, `translate3d(0,0, ${0}px)`);\n\n    if (shadowEl) {\n      $setDuration(shadowEl, `${params.duration}ms`);\n      $setEasing(shadowEl, '');\n    }\n\n    if (highlightEl) {\n      $setDuration(highlightEl, `${params.duration}ms`);\n      $setEasing(highlightEl, '');\n      $setTransform(highlightEl, `translate3d(0, 0, 0)`);\n      $setOpacity(highlightEl, 0);\n    }\n\n    $setDuration(rotateEl, `${params.duration}ms`);\n    $setEasing(rotateEl, '');\n    $setTransform(rotateEl, `translate3d(0,0,0) rotateX(0deg) rotateY(0deg)`);\n    setChildrenOffset({\n      duration: `${params.duration}ms`\n    });\n    self.isActive = false;\n    if (typeof params.onRotate === 'function') params.onRotate(0, 0);\n    if (typeof params.onLeave === 'function') params.onLeave();\n  };\n\n  const onDocumentClick = e => {\n    const clickTarget = e.target;\n\n    if (!eventsEl.contains(clickTarget) && clickTarget !== eventsEl && self.isActive) {\n      onPointerLeave();\n    }\n  };\n\n  const initDOM = () => {\n    if (typeof el === 'string') {\n      el = $(document, el);\n    }\n\n    if (!el) return; // eslint-disable-next-line\n\n    if (el.__atropos__) return;\n\n    if (typeof eventsEl !== 'undefined') {\n      if (typeof eventsEl === 'string') {\n        eventsEl = $(document, eventsEl);\n      }\n    } else {\n      eventsEl = el;\n    }\n\n    Object.assign(self, {\n      el\n    });\n    rotateEl = $(el, '.atropos-rotate');\n    scaleEl = $(el, '.atropos-scale');\n    innerEl = $(el, '.atropos-inner'); // eslint-disable-next-line\n\n    el.__atropos__ = self;\n  };\n\n  const init = () => {\n    initDOM();\n    if (!el || !eventsEl) return;\n\n    if (params.shadow) {\n      createShadow();\n    }\n\n    if (params.highlight) {\n      createHighlight();\n    }\n\n    if (params.rotateTouch) {\n      if (typeof params.rotateTouch === 'string') {\n        el.classList.add(`atropos-rotate-touch-${params.rotateTouch}`);\n      } else {\n        el.classList.add('atropos-rotate-touch');\n      }\n    }\n\n    if ($(el, '[data-atropos-opacity]')) {\n      setChildrenOffset({\n        opacityOnly: true\n      });\n    }\n\n    $on(document, 'click', onDocumentClick);\n    $on(eventsEl, 'pointerdown', onPointerEnter);\n    $on(eventsEl, 'pointerenter', onPointerEnter);\n    $on(eventsEl, 'pointermove', onPointerMove);\n    $on(eventsEl, 'touchmove', onTouchMove);\n    $on(eventsEl, 'pointerleave', onPointerLeave);\n    $on(eventsEl, 'pointerup', onPointerLeave);\n    $on(eventsEl, 'lostpointercapture', onPointerLeave);\n\n    if (params.alwaysActive) {\n      activate();\n      setElements();\n    }\n  };\n\n  const destroy = () => {\n    self.destroyed = true;\n    cancelAnimationFrame(queueFrameId);\n    $off(document, 'click', onDocumentClick);\n    $off(eventsEl, 'pointerdown', onPointerEnter);\n    $off(eventsEl, 'pointerenter', onPointerEnter);\n    $off(eventsEl, 'pointermove', onPointerMove);\n    $off(eventsEl, 'touchmove', onTouchMove);\n    $off(eventsEl, 'pointerleave', onPointerLeave);\n    $off(eventsEl, 'pointerup', onPointerLeave);\n    $off(eventsEl, 'lostpointercapture', onPointerLeave); // eslint-disable-next-line\n\n    delete el.__atropos__;\n  };\n\n  self.destroy = destroy;\n  init(); // eslint-disable-next-line\n\n  return self;\n}\n\nexport { Atropos, Atropos as default };\n"],"names":[],"sourceRoot":"webpack:///"}